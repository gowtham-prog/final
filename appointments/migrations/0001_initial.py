# Generated by Django 3.2.2 on 2021-07-03 06:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=64)),
                ('Phone', models.CharField(max_length=12)),
                ('Department', models.ManyToManyField(blank=True, related_name='dr_speciality', to='appointments.department')),
            ],
        ),
        migrations.CreateModel(
            name='gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Gender', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('Phone', models.CharField(max_length=12)),
                ('Department', models.ManyToManyField(blank=True, related_name='h_speciality', to='appointments.department')),
                ('Doctor', models.ManyToManyField(blank=True, related_name='h_doctors', to='appointments.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Village', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=64)),
                ('Age', models.IntegerField()),
                ('Problem', models.CharField(max_length=1000)),
                ('Date', models.DateField()),
                ('timestamp', models.TimeField()),
                ('Active', models.BooleanField(default=True)),
                ('Creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.department')),
                ('Doctor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.doctor')),
                ('Gender', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.gender')),
                ('Hospital', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.hospital')),
            ],
        ),
        migrations.CreateModel(
            name='test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Test', models.CharField(max_length=64)),
                ('Name', models.CharField(max_length=64)),
                ('Date', models.DateField()),
                ('Active', models.BooleanField(default=True)),
                ('timestamp', models.TimeField()),
                ('Creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Patient', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.patient')),
                ('location', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.location')),
            ],
        ),
        migrations.CreateModel(
            name='medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine', models.CharField(max_length=64)),
                ('Name', models.CharField(max_length=64)),
                ('Delivery', models.CharField(max_length=64)),
                ('Date', models.DateField()),
                ('Active', models.BooleanField(default=True)),
                ('Creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('Patient', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.patient')),
                ('location', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.location')),
            ],
        ),
        migrations.AddField(
            model_name='hospital',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.location'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='Hospital',
            field=models.ManyToManyField(blank=True, related_name='dr_hospitals', to='appointments.hospital'),
        ),
        migrations.AddField(
            model_name='department',
            name='Doctor',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appointments.doctor'),
        ),
        migrations.AddField(
            model_name='department',
            name='Hospital',
            field=models.ManyToManyField(blank=True, related_name='dpt_hospitals', to='appointments.hospital'),
        ),
    ]
